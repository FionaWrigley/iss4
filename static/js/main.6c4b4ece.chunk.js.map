{"version":3,"sources":["components/Loading.js","components/GetCredentials.js","components/Character.js","MarvelLogo.png","components/Header.js","components/Footer.js","components/Comic.js","components/Event.js","components/ListItem.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Spinner","animation","variant","role","curr_date","Date","process","REACT_APP_APIKEY","REACT_APP_APIPKEY","time_stamp","getTime","GetCredentials","hashkey","md5","Character","id","useLocation","search","replace","useState","card","setCard","ready","setReady","useEffect","axios","get","then","response","data","results","catch","err","console","log","Card","Img","src","thumbnail","path","extension","Body","Title","name","Text","description","series","items","map","srs","index","comics","cmcs","Header","MarvelLogo","alt","React","Component","Footer","bg","href","Comic","title","issueNumber","creators","crtrs","characters","chars","Event","ListItem","metaData","this","props","onClick","handleCardClick","to","PUBLIC_URL","border","List","ctype","searchValue","searchVal","marvelData","setMarvelData","errorFlag","setErrorFlag","errorMessage","setErrorMessage","params","Object","assign","titleStartsWith","nameStartsWith","length","App","setSearchValue","enterPress","setEnterPress","handleLinkClick","document","getElementById","value","Navbar","Brand","Form","action","method","autoComplete","onSubmit","e","preventDefault","FormControl","type","placeholder","Nav","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6c4b4ece.chunk.js","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction Loading () {\r\n\r\n    return (\r\n        <div className =\"text-center margin-top margin-bottom\">\r\n            <Spinner animation=\"grow\" variant = \"light\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n            <Spinner animation=\"grow\" variant = \"light\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n            <Spinner animation=\"grow\" variant = \"light\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner></div>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n\r\n","\r\nimport md5 from 'md5';\r\n\r\nconst curr_date = new Date();\r\nconst {REACT_APP_APIKEY, REACT_APP_APIPKEY} = process.env;\r\nconst time_stamp = curr_date.getTime();\r\n\r\nexport function GetCredentials(){\r\n\r\n    let hashkey= md5(time_stamp+REACT_APP_APIPKEY+REACT_APP_APIKEY);\r\n    const credentials = \"?ts=\"+time_stamp+\"&apikey=\"+REACT_APP_APIKEY+\"&hash=\"+hashkey;\r\n\r\n    return credentials;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {Card} from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Loading from \"./Loading\";\r\nimport { GetCredentials } from './GetCredentials';\r\nimport '../App.css';\r\n\r\nconst {REACT_APP_URL_CHARS} = process.env;\r\n\r\nconst Character = () => {\r\n    const id = useLocation()\r\n        .search\r\n        .replace('?id=', '');\r\n\r\n    const [card,\r\n        setCard] = useState([]);\r\n    const [ready, setReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get(REACT_APP_URL_CHARS + id + GetCredentials())\r\n                .then((response) => {\r\n                    setCard(response.data.data.results[0])\r\n                    setReady(true);\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                });\r\n        \r\n    }, [id]);\r\n\r\n    return (\r\n        (ready) ? (<div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Img\r\n                        className=\"profilePic\"\r\n                        variant=\"left\"\r\n                        src={`${card.thumbnail.path}.${card.thumbnail.extension}`}/>\r\n                </Card>\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center\">{card.name}</Card.Title>\r\n                        <Card.Text>{card.description}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>Series</Card.Title>\r\n                        {card\r\n                            .series\r\n                            .items\r\n                            .map((srs, index) => <Card.Text key={srs.name + index}>{srs.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>Comics</Card.Title>\r\n                        {card\r\n                            .comics\r\n                            .items\r\n                            .map((cmcs, index) => <Card.Text key={cmcs.name + index}>{cmcs.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>) : (<Loading />) \r\n    );\r\n\r\n};\r\n\r\nexport default Character;","export default __webpack_public_path__ + \"static/media/MarvelLogo.41df6f0e.png\";","import React from 'react';\r\nimport * as bs from 'bootstrap/dist/css/bootstrap.css';\r\nimport MarvelLogo from '../MarvelLogo.png';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n          \r\n                    <header>\r\n                        <img className = 'logo' src = {MarvelLogo} alt = {MarvelLogo} />\r\n                    </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <Card id = \"cardPos\" bg=\"dark\" className=\" text-center\">\r\n            <Card.Footer>\r\n                        <a className = \"linkies\" href=\"http://marvel.com\">Data provided by Marvel. © 2020 MARVEL</a>\t\t\t\r\n\t\t\t</Card.Footer>\r\n            </Card>\r\n              \r\n        );\r\n    }\r\n}\r\nexport default Footer;","import React, {useEffect, useState} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Loading from './Loading';\r\nimport { GetCredentials } from './GetCredentials';\r\n\r\nconst {REACT_APP_URL_COMICS} = process.env;\r\n\r\nconst Comic = () => {\r\n    const id = useLocation()\r\n        .search\r\n        .replace('?id=', '');\r\n    const [card,\r\n        setCard] = useState([]);\r\n    const [ready, setReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(REACT_APP_URL_COMICS + id + GetCredentials())\r\n                .then((response) => {\r\n                    setCard(response.data.data.results[0])\r\n                    setReady(true);\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                });\r\n    }, [id]);\r\n\r\n    return (\r\n\r\n        (ready) ? (<div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Img variant=\"top\" src={`${card.thumbnail.path}.${card.thumbnail.extension}`}/>\r\n                </Card>\r\n                <div>\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>{card.title}</Card.Title>\r\n                        <Card.Text>Issue# {card.issueNumber}</Card.Text>\r\n                        <Card.Text>{card.description}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>Creators</Card.Title>\r\n\r\n                        {card.creators\r\n                            .items\r\n                            .map((crtrs, index) => <Card.Text key={crtrs.name + index}>{crtrs.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>Characters</Card.Title>\r\n\r\n                        {card.characters\r\n                            .items\r\n                            .map((chars, index) => <Card.Text key={chars.name + index}>{chars.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                \r\n            </div>\r\n        </div>) : (<Loading />)\r\n    );\r\n};\r\nexport default Comic;","import React, {useEffect, useState} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport { GetCredentials } from './GetCredentials';\r\n\r\nconst {REACT_APP_URL_EVENTS} = process.env;\r\n\r\nconst Event = () => {\r\n\r\n    const id = useLocation()\r\n        .search\r\n        .replace('?id=', '');\r\n\r\n    const [card,\r\n        setCard] = useState([]);\r\n    const [ready, setReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(REACT_APP_URL_EVENTS + id + GetCredentials())\r\n                .then((response) => {\r\n                    setCard(response.data.data.results[0])\r\n                    setReady(true);\r\n                })\r\n                .catch(function (err) {\r\n                    console.log(err);\r\n                });\r\n        \r\n    }, [id]);\r\n\r\n    return (\r\n\r\n        (ready) ? (<div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Img\r\n                        className=\"profilePic\"\r\n                        variant=\"left\"\r\n                        src={`${card.thumbnail.path}.${card.thumbnail.extension}`}/>\r\n                </Card>\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center\">{card.title}</Card.Title>\r\n                        <Card.Text>{card.description}</Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"profileCard\">\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>Series</Card.Title>\r\n                        {card\r\n                            .series\r\n                            .items\r\n                            .map((srs, index) => <Card.Text key={srs.name + index}>{srs.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card className=\"card-width-25\">\r\n                    <Card.Body>\r\n                        <Card.Title>Comics</Card.Title>\r\n                        {card\r\n                            .comics\r\n                            .items\r\n                            .map((cmcs, index) => <Card.Text key={cmcs.name + index}>{cmcs.name}</Card.Text>)}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>) : (<Loading />)\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default Event;","import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport '../App.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n//result cards \r\nclass ListItem extends React.Component {\r\n\r\n    render() {\r\n        const metaData = this.props.card;\r\n        const {id, name, title, thumbnail} = metaData;\r\n        const {PUBLIC_URL} = process.env;\r\n\r\n        return (\r\n\r\n            <Link onClick = {this.props.handleCardClick} className = \"card-width-15\"\r\n                to= {(title)\r\n                ? ((metaData.comics) ? (PUBLIC_URL + \"/eve?id=\" + id)\r\n                : (PUBLIC_URL+\"/com?id=\" + id))\r\n                : (PUBLIC_URL+\"/char?id=\" + id) \r\n                }>\r\n                <Card \r\n                    variant=\"warning\"\r\n                    border=\"none\"\r\n                    className=\"text-center bg-transparent\">  \r\n                        <Card.Img variant=\"top\" src={`${thumbnail.path}.${thumbnail.extension}`}/>\r\n                        <Card.Body>\r\n                            <Card.Title>{(name)\r\n                                    ? name\r\n                                    : title}\r\n                            </Card.Title>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Link>\r\n        )\r\n    }\r\n}\r\nexport default ListItem;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport ListItem from './ListItem';\r\nimport Loading from './Loading';\r\nimport {GetCredentials} from './GetCredentials';\r\n\r\nconst {REACT_APP_URL} = process.env;\r\n\r\nconst List = ({ctype, searchValue, handleCardClick}) => {\r\n\r\n    const searchVal = searchValue;\r\n\r\n    const [marvelData,\r\n        setMarvelData] = useState([]);\r\n    const [ready,\r\n        setReady] = useState(false);\r\n    const [errorFlag,\r\n        setErrorFlag] = useState(false);\r\n    const [errorMessage,\r\n        setErrorMessage] = useState('No results found');\r\n\r\n    useEffect(() => {\r\n        axios.get(REACT_APP_URL + ctype + GetCredentials(), {\r\n            params: Object.assign((ctype === 'comics'\r\n                ? (searchVal !== \"\"\r\n                    ? {\r\n                        titleStartsWith: searchVal\r\n                    }\r\n                    : \"\")\r\n                : (searchVal !== \"\"\r\n                    ? {\r\n                        nameStartsWith: searchVal\r\n                    }\r\n                    : \"\")))\r\n        }).then((response) => {\r\n            setMarvelData(response.data.data.results)\r\n            setReady(true);\r\n        })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n                setErrorMessage(\"An unexpected error occured\");\r\n                setErrorFlag(true);\r\n            });\r\n    }, [ctype, searchVal]);\r\n\r\n    return ((ready)\r\n        ? ((marvelData.length > 0)\r\n            ? (\r\n                <div className=\"resultGrid\">\r\n                    {marvelData.map((card, index) => <ListItem card={card} key={index} handleCardClick={handleCardClick}/>)}\r\n                </div>\r\n            )\r\n            : (\r\n                <div className=\"card custom-card\">{errorMessage}</div>\r\n            ))\r\n        : ((errorFlag)\r\n            ? (\r\n                <div className=\"card custom-card\">{errorMessage}</div>\r\n            )\r\n            : (<Loading/>)));\r\n}\r\nexport default List;\r\n","import React, {useState} from 'react';\r\nimport {Navbar, Nav, Form, FormControl} from 'react-bootstrap';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport Character from './components/Character';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport Comic from './components/Comic';\r\nimport Event from './components/Event';\r\nimport List from './components/List';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n    const [searchValue,\r\n        setSearchValue] = useState('');\r\n    const [enterPress,\r\n        setEnterPress] = useState(false);\r\n\r\n    const {PUBLIC_URL} = process.env;\r\n\r\n    // ////////////////////////////////////////////////////////////////////////////\r\n    // / ////////////////////////////////////////////////////////////////////////\r\n\r\n    function submitHandler(e) {\r\n\r\n        setSearchValue(document.getElementById('search').value);\r\n        setEnterPress(true);\r\n        e.preventDefault();\r\n    }\r\n    // /////////////////////////////////////////////////////////////////////////////\r\n    // / //////////////////////////////////////////////////////////////////////////\r\n\r\n    function handleLinkClick() {\r\n        setSearchValue(document.getElementById('search').value);\r\n    }\r\n\r\n    function handleCardClick() {\r\n        setEnterPress(false);\r\n    }\r\n\r\n    function getEvent() {\r\n\r\n        if (enterPress === true) {\r\n            return <List\r\n                ctype=\"events\"\r\n                searchValue={searchValue}\r\n                handleCardClick={handleCardClick}/>\r\n        } else {\r\n            return <Event/>\r\n        }\r\n    }\r\n\r\n    function getChar() {\r\n        if (enterPress === true) {\r\n            return <List\r\n                ctype=\"characters\"\r\n                searchValue={searchValue}\r\n                handleCardClick={handleCardClick}/>\r\n        } else {\r\n            return <Character/>\r\n        }\r\n    }\r\n\r\n    function getComic() {\r\n\r\n        if (enterPress === true) {\r\n            return <List\r\n                ctype=\"comics\"\r\n                searchValue={searchValue}\r\n                handleCardClick={handleCardClick}/>\r\n        } else {\r\n            return <Comic/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='App'>\r\n            <Header/>\r\n            <Router>\r\n                <Navbar bg=\"dark\" variant=\"dark\" id=\"myNav\">\r\n                    <Navbar.Brand>Search\r\n                    </Navbar.Brand>\r\n                    <Form action=\"/\" method=\"get\" autoComplete=\"off\" onSubmit={submitHandler}>\r\n                        <FormControl\r\n                            type=\"text\"\r\n                            id=\"search\"\r\n                            placeholder=\"Search\"\r\n                            className=\"mr-sm-2\"/>\r\n                    </Form>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Link\r\n                            className=\"linkies active\"\r\n                            to={PUBLIC_URL + \"/characters\"}\r\n                            id=\"characters\"\r\n                            onClick={handleLinkClick}>\r\n                            Characters\r\n                        </Link>\r\n                        <Link\r\n                            className=\"linkies\"\r\n                            onClick={handleLinkClick}\r\n                            to={PUBLIC_URL + \"/comics\"}\r\n                            id=\"comics\">\r\n                            Comics\r\n                        </Link>\r\n                        <Link\r\n                            className=\"linkies\"\r\n                            onClick={handleLinkClick}\r\n                            to={PUBLIC_URL + \"/events?search=\" + searchValue}\r\n                            id=\"events\">\r\n                            Events\r\n                        </Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Switch>\r\n                    <Route exact path={PUBLIC_URL + \"/characters\"}>\r\n                        <List\r\n                            ctype=\"characters\"\r\n                            searchValue={searchValue}\r\n                            handleCardClick={handleCardClick}/>\r\n                    </Route>\r\n                    <Route exact path={PUBLIC_URL + \"/comics\"}>\r\n\r\n                        <List\r\n                            ctype=\"comics\"\r\n                            searchValue={searchValue}\r\n                            handleCardClick={handleCardClick}/>\r\n                    </Route>\r\n                    <Route exact path={PUBLIC_URL + \"/events\"}>\r\n                        <List\r\n                            ctype=\"events\"\r\n                            searchValue={searchValue}\r\n                            handleCardClick={handleCardClick}/>\r\n                    </Route>\r\n                    <Route path={PUBLIC_URL + \"/char\"}>\r\n                        {getChar()}\r\n                    </Route>\r\n                    <Route path={PUBLIC_URL + \"/com\"}>\r\n                        {getComic()}\r\n                    </Route>\r\n                    <Route path={PUBLIC_URL + \"/eve\"}>\r\n                        {getEvent()}\r\n                    </Route>\r\n                    <Route exact path={PUBLIC_URL + \"/\"}>\r\n                        <List\r\n                            ctype=\"characters\"\r\n                            searchValue={searchValue}\r\n                            handleCardClick={handleCardClick}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import FetchFromAPI from './App';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}